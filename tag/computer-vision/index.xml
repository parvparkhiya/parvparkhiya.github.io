<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Computer Vision | Parv Parkhiya</title>
    <link>https://parvparkhiya.github.io/tag/computer-vision/</link>
      <atom:link href="https://parvparkhiya.github.io/tag/computer-vision/index.xml" rel="self" type="application/rss+xml" />
    <description>Computer Vision</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Fri, 02 Mar 2018 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://parvparkhiya.github.io/media/icon_hu651937ae150e4d5d4164cf9501a55289_56927_512x512_fill_lanczos_center_3.png</url>
      <title>Computer Vision</title>
      <link>https://parvparkhiya.github.io/tag/computer-vision/</link>
    </image>
    
    <item>
      <title>Constructing Category-Specific Models for Monocular Object-SLAM</title>
      <link>https://parvparkhiya.github.io/project/oslam/</link>
      <pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate>
      <guid>https://parvparkhiya.github.io/project/oslam/</guid>
      <description>&lt;p&gt;We present a new paradigm for real-time object-oriented SLAM with a monocular camera. Contrary to previous approaches, that rely on object-level models, we construct category-level models from CAD collections which are now widely available. To alleviate the need for huge amounts of labeled data, we develop a rendering pipeline that enables synthesis of large datasets from a limited amount of manually labeled data. Using data thus synthesized, we learn category-models for object deformations in 3D, as well as discriminative object features in 2D. These category models are instance-independent and aid in the design of object landmark observations that can be incorporated into a generic monocular SLAM framework. Where typical object-SLAM approaches usually solve only for object and camera poses, we also estimate object shape on-the-fly, allowing for a wide range of objects from the category to be present in the scene. Moreover, since our 2D object features are learned discriminatively, the proposed object-SLAM system succeeds in several scenarios where sparse feature-based monocular SLAM fails due to insufficient features or parallax. Also, the proposed category-models help in object instance retrieval, useful for Augmented Reality (AR) applications. We evaluate the proposed framework on multiple challenging real-world scenes and show — to the best of our knowledge — first results of an instance-independent monocular object-SLAM system and the benefits it enjoys over feature-based SLAM methods.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/jzZl4RUq5-Y&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Augmented Reality 3D Room Decore Preview</title>
      <link>https://parvparkhiya.github.io/project/ar/</link>
      <pubDate>Thu, 01 Dec 2016 00:00:00 +0000</pubDate>
      <guid>https://parvparkhiya.github.io/project/ar/</guid>
      <description>&lt;p&gt;We have developed a Matlab application to add 3D model of chair, lamp, cycle, vase etc in a captured real world image so that it could simulate how would room look like if the object was really present in that environment. For that, we place a simple marker where we have to put the 3D model and acquire the information of placement and orientation of the marker in 3d space, we place our 3D model with same orientation as that of marker. Followed by blending it with captured image.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
